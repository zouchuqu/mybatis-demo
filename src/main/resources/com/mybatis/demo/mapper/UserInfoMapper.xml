<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间是接口的全类名-->
<mapper namespace="com.mybatis.demo.mapper.UserInfoMapper">

    <!--
   方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集
                              封装联表查询的数据(去除重复的数据)
    select * from user u,orders o where u.id=o.user_id and u.id=#{id}
    -->
    <select id="selectUserInfoAndOrdersByUserId" resultMap="getUserInfoAndOrders">
        select u.*,o.id oid,o.number number,o.user_id userId from user_info u,orders o where u.id=o.user_id and u.id=#{id}
    </select>
    <resultMap type="com.mybatis.demo.model.UserInfo" id="getUserInfoAndOrders">
        <!--id:指定查询列表唯一标识，如果有多个唯一标识，则配置多个id
            column:数据库对应的列
            property:实体类对应的属性名 -->
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="high" property="high"/>
        <result column="age" property="age"/>
        <result column="sex" property="sex"/>
        <!--
            property:实体类中定义的属性名
            ofType：指定映射到集合中的全类名
          -->
        <collection property="orders" ofType="com.mybatis.demo.model.Orders">
            <id column="oid" property="id"/>
            <result column="number" property="number"/>
            <result column="userId" property="userId"/>
        </collection>
    </resultMap>

    <!--
     方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型
    -->
    <select id="getUserInfoAndOrdersByUserInfoId" parameterType="int" resultMap="getOrderMap">
        select * from user_info where id=#{id}
    </select>

    <resultMap type="com.mybatis.demo.model.UserInfo" id="getOrderMap">
        <id column="id" property="id"/>
        <id column="username" property="username"/>
        <result column="age" property="age"/>
        <result column="sex" property="sex"/>

        <!--property="orders" : userInfo 被查询表中要查询的属性-->
        <!--column="id" : id 被查询表中的条件属性-->
        <collection property="orders" column="id" select="getOrdersByOrderId">

        </collection>
    </resultMap>

    <select id="getOrdersByOrderId" parameterType="int" resultType="com.mybatis.demo.model.Orders">
        select * from orders where user_id=#{id}
    </select>

    <!--多对多查询:给定角色id，查询这个角色所属的所有用户信息-->
    <select id="selectUserInfoByRoleId" resultMap="getUserInfoMap">
        select u.id,u.username,u.age,u.sex from user_role ur,user_info u where ur.user_id=u.id and ur.role_id=#{id}
    </select>

    <resultMap type="com.mybatis.demo.model.UserInfo" id="getUserInfoMap">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="age" property="age"/>
        <result column="sex" property="sex"/>
    </resultMap>

    <!--多对多查询:给定用户id，查询这个用户所拥有的角色信息-->
    <select id="selectSysRoleByUserInfoId" resultMap="getSysRoleMap">
        select r.id,r.name from user_role ur,sys_role r where ur.role_id=r.id and ur.user_id=#{id}
    </select>

    <resultMap type="com.mybatis.demo.model.SysRole" id="getSysRoleMap">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>

</mapper>